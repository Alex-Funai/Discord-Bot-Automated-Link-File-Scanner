0
00:00:01,040 --> 00:00:02,060
[Autogenerated] In this clip, we're going

1
00:00:02,060 --> 00:00:04,200
to discuss non payload detection rule

2
00:00:04,200 --> 00:00:07,019
options, focusing on five of the available

3
00:00:07,019 --> 00:00:09,449
options to detect packet header values or

4
00:00:09,449 --> 00:00:11,869
behavior The five options will cover in

5
00:00:11,869 --> 00:00:15,750
this course. R T T l frag bits de size

6
00:00:15,750 --> 00:00:18,940
flags and flow. Let's go over each of them

7
00:00:18,940 --> 00:00:22,039
quickly before we look at some examples.

8
00:00:22,039 --> 00:00:24,719
The first option T T. L, was originally

9
00:00:24,719 --> 00:00:27,059
designed to detect trace route attempts by

10
00:00:27,059 --> 00:00:29,100
focusing on the timeto live value of each

11
00:00:29,100 --> 00:00:31,739
packet. It could be set to alert based on

12
00:00:31,739 --> 00:00:34,479
T T l values, or ranges between zero and 2

13
00:00:34,479 --> 00:00:37,859
55. Trace route works by sending UDP

14
00:00:37,859 --> 00:00:40,350
packets with progressively increasing TCL

15
00:00:40,350 --> 00:00:43,229
values, waiting for an ICMP time exceeded

16
00:00:43,229 --> 00:00:45,740
message to indicate the next top

17
00:00:45,740 --> 00:00:48,259
configuring TT L, with a low range can be

18
00:00:48,259 --> 00:00:50,340
used to detect an alert on a Siris of

19
00:00:50,340 --> 00:00:52,289
packets with slowly increasing time to

20
00:00:52,289 --> 00:00:55,850
live the next option. Frag bits can check

21
00:00:55,850 --> 00:00:57,450
the I P header to determine if

22
00:00:57,450 --> 00:01:00,310
fragmentation or reserve bids are set. I p

23
00:01:00,310 --> 00:01:02,520
Fragmentation is one method of bypassing

24
00:01:02,520 --> 00:01:04,739
intrusion detection systems like snort,

25
00:01:04,739 --> 00:01:06,719
and the capability is built into network

26
00:01:06,719 --> 00:01:09,319
scanning tools like end map specifically

27
00:01:09,319 --> 00:01:12,519
for this purpose we could use frag bits to

28
00:01:12,519 --> 00:01:14,489
alert on this type of traffic so we can

29
00:01:14,489 --> 00:01:16,760
begin tracking it to detect scans or

30
00:01:16,760 --> 00:01:20,079
fragmentation attacks. The size is used

31
00:01:20,079 --> 00:01:22,209
for the opposite task of detecting

32
00:01:22,209 --> 00:01:24,969
abnormally large packets attacks.

33
00:01:24,969 --> 00:01:27,000
Exploiting a programs inability to handle

34
00:01:27,000 --> 00:01:28,980
large packets are also called buffer

35
00:01:28,980 --> 00:01:31,739
overflows. The extra data sent in the

36
00:01:31,739 --> 00:01:33,780
packet can contain code, which the

37
00:01:33,780 --> 00:01:35,489
vulnerable machine runs to trigger an

38
00:01:35,489 --> 00:01:38,849
exploit. Large ICMP packets can also be

39
00:01:38,849 --> 00:01:41,439
used to attempt denial of service attacks.

40
00:01:41,439 --> 00:01:43,930
Using decides with a specific bite range

41
00:01:43,930 --> 00:01:45,799
can alert you to the possibility of these

42
00:01:45,799 --> 00:01:48,700
types of attacks. Flags are used to check

43
00:01:48,700 --> 00:01:51,939
for specific TCP flags. This option can be

44
00:01:51,939 --> 00:01:54,510
used to detect unexpected TCP packets used

45
00:01:54,510 --> 00:01:57,129
in scans or attacks. The exploit machines

46
00:01:57,129 --> 00:02:00,459
have difficulty handling them. One example

47
00:02:00,459 --> 00:02:02,209
is a Christmas tree attack and the

48
00:02:02,209 --> 00:02:05,849
associate ID and map Xmas. Scan these set

49
00:02:05,849 --> 00:02:08,409
multiple TCP flags and send the package to

50
00:02:08,409 --> 00:02:10,210
the system to either cause a denial of

51
00:02:10,210 --> 00:02:12,409
service or cause the machine to report

52
00:02:12,409 --> 00:02:14,340
something back to end map that indicates

53
00:02:14,340 --> 00:02:17,750
support. State Finally flow is used in

54
00:02:17,750 --> 00:02:19,919
conjunction with a session pre processor

55
00:02:19,919 --> 00:02:22,870
in version two or the Stream TCP module in

56
00:02:22,870 --> 00:02:25,099
version three to track the state of a

57
00:02:25,099 --> 00:02:27,819
connection. This allows you to write rules

58
00:02:27,819 --> 00:02:29,430
that tracked specific traffic flow

59
00:02:29,430 --> 00:02:32,530
directions using flow. You can configure

60
00:02:32,530 --> 00:02:34,680
rules to apply to either clients or

61
00:02:34,680 --> 00:02:37,159
servers within the same network, allowing

62
00:02:37,159 --> 00:02:38,990
you to be more specific with the devices

63
00:02:38,990 --> 00:02:42,090
you track within your home net. We'll use

64
00:02:42,090 --> 00:02:43,819
a few of these in the next demo, but

65
00:02:43,819 --> 00:02:45,819
before we start, let's look at an example

66
00:02:45,819 --> 00:02:49,110
Rule using the flow option. This example

67
00:02:49,110 --> 00:02:50,759
is a modification of the raw bite's

68
00:02:50,759 --> 00:02:53,479
content rule we saw earlier to detect an

69
00:02:53,479 --> 00:02:55,699
attempted back door of the vulnerable BSF

70
00:02:55,699 --> 00:02:58,669
TPD service. The source network was

71
00:02:58,669 --> 00:03:00,810
changed at home net so we can detect

72
00:03:00,810 --> 00:03:02,819
internal attempts to open the same

73
00:03:02,819 --> 00:03:06,280
________. We added the flow option to

74
00:03:06,280 --> 00:03:08,490
detect traffic with content destined for

75
00:03:08,490 --> 00:03:11,689
the FTP server. This rule will ignore

76
00:03:11,689 --> 00:03:14,020
traffic from the FTP server to any client

77
00:03:14,020 --> 00:03:19,000
that would match our content rules, since that would not indicate a ________ attempt

